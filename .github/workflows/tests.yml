name: pymox tests

on:
  pull_request:
  push:
    branches: master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: python -m pip install poetry
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
         path: ~/.virtualenvs
         key: poetry-${{ hashFiles('**/poetry.lock') }}
         restore-keys: |
           poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
         poetry config virtualenvs.in-project false
         poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Test with pytest
        run: poetry run pytest

  build_older:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.3", "3.4", "3.5", "3.6"]

    steps:
      - uses: actions/checkout@v3
      - name: Install python version ${{ matrix.python-version }}
        uses: gabrielfalcao/pyenv-action@v13
        with:
          default: "${{ matrix.python-version }}"
          command: pip install -U pip  # upgrade pip after installing python
      - name: Install Poetry
        run: python -m pip install poetry
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
         path: ~/.virtualenvs
         key: poetry-${{ hashFiles('**/poetry.lock') }}
         restore-keys: |
           poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
         poetry config virtualenvs.in-project false
         poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Test with pytest
        run: poetry run pytest